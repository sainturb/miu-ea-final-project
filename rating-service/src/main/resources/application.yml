spring:
  application:
    name: rating-service
  cloud:
    config:
      fail-fast: true
      retry:
        max-attempts: 300
        max-interval: 20000
  config:
    import: optional:configserver:http://${CONFIG_SERVER}:8090
  datasource:
    url: jdbc:postgresql://${DATABASE_HOST:localhost}:5432/postgres
    username: postgres
    password: postgres
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        show_sql: true
    hibernate:
      ddl-auto: create
    defer-datasource-initialization: true
    sql:
      init:
        mode: always
  zipkin:
    base-url: http://${ZIPKIN_SERVER:localhost}:9411
  kafka:
    bootstrap-servers: ${KAFKA_SERVERS:localhost:9092}
    consumer:
      group-id: group-1
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: false
    producer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

server:
  port: 8085

eureka:
  client:
    serviceUrl:
      defaultZone: http://${DISCOVERY_SERVER}:8761/eureka/

keycloak:
  enabled: true
  realm: spring-realm
  auth-server-url: http://${KEYCLOAK_SERVER:localhost}:8080/auth
  public-client: true
  bearer-only: true
  credentials:
    secret: bbc02d7c-d18e-4fb7-8882-23165e849810
  ssl-required: none
  resource: web-app
  use-resource-role-mappings: true